apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: tt-rss
  name: ttrss-tt-rss
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tt-rss
  template:
    metadata:
      labels:
        app: tt-rss
    spec:
      containers:
      - name: tt-rss
        image: cthulhoo/ttrss-fpm-pgsql-static:latest
        imagePullPolicy: Always
        env:
        - name: TTRSS_DB_HOST
          value: postgres-postgresql.default
        - name: TTRSS_DB_USER
          value: postgres
        - name: TTRSS_DB_NAME
          value: ttrss
        - name: TTRSS_DB_PASS
          valueFrom:
            secretKeyRef:
              key: postgresql-password
              name: postgres-postgresql
        - name: TTRSS_DB_PORT
          value: "5432"
        - name: TTRSS_SELF_URL_PATH
          value: https://reader.dittos.pe.kr/tt-rss
        - name: TTRSS_SINGLE_USER_MODE
          value: "false"
        resources: {}
        volumeMounts:
        - mountPath: /data
          name: tt-rss-data
        - mountPath: /var/www/html
          name: app

      - name: tt-rss-updater
        image: cthulhoo/ttrss-fpm-pgsql-static:latest
        imagePullPolicy: Always
        command: ['/opt/tt-rss/updater.sh']
        env:
        - name: TTRSS_DB_HOST
          value: postgres-postgresql.default
        - name: TTRSS_DB_USER
          value: postgres
        - name: TTRSS_DB_NAME
          value: ttrss
        - name: TTRSS_DB_PASS
          valueFrom:
            secretKeyRef:
              key: postgresql-password
              name: postgres-postgresql
        - name: TTRSS_DB_PORT
          value: "5432"
        - name: TTRSS_SELF_URL_PATH
          value: https://reader.dittos.pe.kr/tt-rss
        - name: TTRSS_SINGLE_USER_MODE
          value: "false"
        volumeMounts:
        - mountPath: /data
          name: tt-rss-data
        - mountPath: /var/www/html
          name: app

      - name: tt-rss-frontend
        image: cthulhoo/ttrss-web-nginx:latest
        imagePullPolicy: Always
        volumeMounts:
        - mountPath: /var/www/html
          name: app
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 300
          successThreshold: 1
          timeoutSeconds: 1
        ports:
        - containerPort: 80
          name: http
          protocol: TCP

      securityContext:
        supplementalGroups:
        - 5000
      terminationGracePeriodSeconds: 30
      volumes:
      - name: tt-rss-data
        persistentVolumeClaim:
          claimName: ttrss-tt-rss
      - name: app
        emptyDir: {}
      hostAliases:
      - ip: "127.0.0.1"
        hostnames:
        - "app"
